<binding xmlns:jqa="http://www.fluxit.com.ar/jqa/schema/ruleset" trim-whitespace="true">
  <namespace uri="http://www.fluxit.com.ar/jqa/schema/ruleset" prefix="jqa"/>
  <mapping abstract="true" type-name="jqa:Ruleset" class="ar.com.fluxit.jqa.schema.Ruleset">
    <collection get-method="getRuleList" set-method="setRuleList" create-type="java.util.ArrayList">
      <structure map-as="jqa:Rule" name="rule"/>
    </collection>
    <value style="attribute" name="name" get-method="getName" set-method="setName"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.Ruleset" name="Ruleset" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:Ruleset"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:Rule" class="ar.com.fluxit.jqa.schema.Rule">
    <structure map-as="jqa:Predicate" get-method="getFilterPredicate" set-method="setFilterPredicate" name="filterPredicate"/>
    <structure map-as="jqa:Predicate" get-method="getCheckPredicate" set-method="setCheckPredicate" name="checkPredicate"/>
    <value style="attribute" name="name" get-method="getName" set-method="setName"/>
    <value style="attribute" name="message" get-method="getMessage" set-method="setMessage"/>
    <value style="attribute" name="priority" get-method="getPriority" set-method="setPriority" usage="optional"/>
    <value style="attribute" name="bidirectionalCheck" get-method="getBidirectionalCheck" set-method="setBidirectionalCheck" usage="optional"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.Rule" name="Rule" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:Rule"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:Predicate" class="ar.com.fluxit.jqa.schema.Predicate">
    <value style="attribute" name="name" get-method="getName" set-method="setName" usage="optional"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:ContextProvidedPredicate" class="ar.com.fluxit.jqa.schema.ContextProvidedPredicate">
    <structure map-as="jqa:Predicate"/>
    <value style="attribute" name="predicateName" get-method="getPredicateName" set-method="setPredicateName"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.ContextProvidedPredicate" name="ContextProvidedPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:ContextProvidedPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:FilteredPredicate" class="ar.com.fluxit.jqa.schema.FilteredPredicate">
    <structure map-as="jqa:Predicate"/>
    <structure map-as="jqa:Predicate" get-method="getPredicate1" set-method="setPredicate1" name="predicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:AbstractionPredicate" class="ar.com.fluxit.jqa.schema.AbstractionPredicate">
    <structure map-as="jqa:Predicate"/>
    <value style="attribute" name="abstractionType" get-method="getAbstractionType" set-method="setAbstractionType" format="jqa:AbstractionType"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.AbstractionPredicate" name="AbstractionPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:AbstractionPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:AllocationPredicate" class="ar.com.fluxit.jqa.schema.AllocationPredicate">
    <structure map-as="jqa:FilteredPredicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.AllocationPredicate" name="AllocationPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:AllocationPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:NamingPredicate" class="ar.com.fluxit.jqa.schema.NamingPredicate">
    <structure map-as="jqa:Predicate"/>
    <value style="attribute" name="namePattern" get-method="getNamePattern" set-method="setNamePattern"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.NamingPredicate" name="NamingPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:NamingPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:ThrowingPredicate" class="ar.com.fluxit.jqa.schema.ThrowingPredicate">
    <structure map-as="jqa:FilteredPredicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.ThrowingPredicate" name="ThrowingPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:ThrowingPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:TypingPredicate" class="ar.com.fluxit.jqa.schema.TypingPredicate">
    <structure map-as="jqa:FilteredPredicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.TypingPredicate" name="TypingPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:TypingPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:UsagePredicate" class="ar.com.fluxit.jqa.schema.UsagePredicate">
    <structure map-as="jqa:FilteredPredicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.UsagePredicate" name="UsagePredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:UsagePredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:VarArgsLogicPredicate" class="ar.com.fluxit.jqa.schema.VarArgsLogicPredicate">
    <structure map-as="jqa:Predicate"/>
    <collection get-method="getPredicateList" set-method="setPredicateList" create-type="java.util.ArrayList">
      <structure map-as="jqa:Predicate" name="predicate"/>
    </collection>
  </mapping>
  <mapping abstract="true" type-name="jqa:AndPredicate" class="ar.com.fluxit.jqa.schema.AndPredicate">
    <structure map-as="jqa:VarArgsLogicPredicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.AndPredicate" name="AndPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:AndPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:FalsePredicate" class="ar.com.fluxit.jqa.schema.FalsePredicate">
    <structure map-as="jqa:Predicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.FalsePredicate" name="FalsePredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:FalsePredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:NotPredicate" class="ar.com.fluxit.jqa.schema.NotPredicate">
    <structure map-as="jqa:Predicate"/>
    <structure map-as="jqa:Predicate" get-method="getPredicate1" set-method="setPredicate1" name="predicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.NotPredicate" name="NotPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:NotPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:OrPredicate" class="ar.com.fluxit.jqa.schema.OrPredicate">
    <structure map-as="jqa:VarArgsLogicPredicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.OrPredicate" name="OrPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:OrPredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:TruePredicate" class="ar.com.fluxit.jqa.schema.TruePredicate">
    <structure map-as="jqa:Predicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.TruePredicate" name="TruePredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:TruePredicate"/>
  </mapping>
  <mapping abstract="true" type-name="jqa:XORPredicate" class="ar.com.fluxit.jqa.schema.XORPredicate">
    <structure map-as="jqa:VarArgsLogicPredicate"/>
  </mapping>
  <mapping class="ar.com.fluxit.jqa.schema.XORPredicate" name="XORPredicate" ns="http://www.fluxit.com.ar/jqa/schema/ruleset">
    <structure map-as="jqa:XORPredicate"/>
  </mapping>
</binding>