<?xml version="1.0" encoding="UTF-8"?>
<jqa_ctx:RulesContext name=""
	xmlns:jqa="http://www.fluxit.com.ar/jqa/schema/ruleset" xmlns:jqa_ctx="http://www.fluxit.com.ar/jqa/schema/rulescontext"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.fluxit.com.ar/jqa/schema/rulescontext https://raw.github.com/jbaris/jqa/master/jqa-parent/jqa-ctx-factory-xmlbeans/src/main/resources/schema/rulescontext.xsd http://www.fluxit.com.ar/jqa/schema/ruleset https://raw.github.com/jbaris/jqa/master/jqa-parent/jqa-ctx-factory-xmlbeans/src/main/resources/schema/ruleset.xsd ">

	<rulesContextImport resource="attempts.xml" />
	<rulesContextImport resource="variables.xml" />

	<!-- RuleSet that checks the classes naming -->
	<ruleSet name="Naming ruleset">

		<!-- Entity naming -->
		<rule name="Entity naming" message="The Entity '${type.name}' must be named like '${entity.namePattern}'"
			priority="4">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="Entity attempt" />
			<checkPredicate xsi:type="jqa:NamingPredicate" namePattern="${entity.namePattern}" />
		</rule>

		<!-- Service contract naming -->
		<rule name="Service contract naming"
			message="The Service contract '${type.name}' must be named like '${serviceContract.namePattern}'"
			priority="4">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="Service contract attempt" />
			<checkPredicate xsi:type="jqa:NamingPredicate" namePattern="${serviceContract.namePattern}" />
		</rule>

		<!-- Service implementation naming -->
		<rule name="Service implementation naming"
			message="The Service implementation '${type.name}' must be named like '${serviceImpl.namePattern}'"
			priority="4">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="Service implementation attempt" />
			<checkPredicate xsi:type="jqa:NamingPredicate" namePattern="${serviceImpl.namePattern}" />
		</rule>

		<!-- BusinessObject contract naming -->
		<rule name="BO contract naming" message="The BO contract '${type.name}' must be named like '${boContract.namePattern}'"
			priority="4">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="BO contract attempt" />
			<checkPredicate xsi:type="jqa:NamingPredicate" namePattern="${boContract.namePattern}" />
		</rule>

		<!-- BusinessObject implementation naming -->
		<rule name="BO implementation naming"
			message="The BO implementation '${type.name}' must be named like '${boImpl.namePattern}'"
			priority="4">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="BO implementation attempt" />
			<checkPredicate xsi:type="jqa:NamingPredicate" namePattern="${boImpl.namePattern}" />
		</rule>

		<!-- DataAccessObject contract naming -->
		<rule name="DAO contract naming" message="The DAO contract '${type.name}' must be named like '${daoContract.namePattern}'"
			priority="4">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="DAO contract attempt" />
			<checkPredicate xsi:type="jqa:NamingPredicate" namePattern="${daoContract.namePattern}" />
		</rule>

		<!-- DataAccessObject implementation naming -->
		<rule name="DAO implementation naming"
			message="The DAO implementation '${type.name}' must be named like '${daoImpl.namePattern}'"
			priority="4">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="DAO implementation attempt" />
			<checkPredicate xsi:type="jqa:NamingPredicate" namePattern="${daoImpl.namePattern}" />
		</rule>

	</ruleSet>
</jqa_ctx:RulesContext>