<?xml version="1.0" encoding="UTF-8"?>
<jqa_ctx:RulesContext name=""
	xmlns:jqa="http://www.fluxit.com.ar/jqa/schema/ruleset" xmlns:jqa_ctx="http://www.fluxit.com.ar/jqa/schema/rulescontext"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.fluxit.com.ar/jqa/schema/rulescontext https://raw.github.com/jbaris/jqa/master/jqa-parent/jqa-ctx-factory-xmlbeans/src/main/resources/schema/rulescontext.xsd ">

	<rulesContextImport resource="attempts.xml" />

	<!-- RuleSet that checks the classes typing -->
	<ruleSet name="Typing ruleset">

		<!-- Entity typing -->
		<rule name="Entity typing"
			message="The Entity '${type.name}' must implement '${entity.superType}'"
			priority="3">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="Entity attempt" />
			<checkPredicate xsi:type="jqa:TypingPredicate">
				<predicate xsi:type="jqa:NamingPredicate" namePattern="${entity.superType}" />
			</checkPredicate>
		</rule>

		<!-- Service contract typing -->
		<rule name="Service contract typing"
			message="The Service contract '${type.name}' must extend to '${service.superType}'"
			priority="3">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="Service contract attempt" />
			<checkPredicate xsi:type="jqa:TypingPredicate">
				<predicate xsi:type="jqa:NamingPredicate" namePattern="${service.superType}" />
			</checkPredicate>
		</rule>

		<!-- Service implementation typing -->
		<rule name="Service implementation typing"
			message="The Service implementation '${type.name}' must implement a valid Service contract"
			priority="3">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="Service implementation attempt" />
			<checkPredicate xsi:type="jqa:TypingPredicate">
				<predicate xsi:type="jqa:ContextProvidedPredicate" predicateName="Service contract attempt" />
			</checkPredicate>
		</rule>

		<!-- BusinessObject contract typing -->
		<rule name="BO contract typing"
			message="The BO contract '${type.name}' must extend to '${bo.superType}'"
			priority="3">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="BO contract attempt" />
			<checkPredicate xsi:type="jqa:TypingPredicate">
				<predicate xsi:type="jqa:NamingPredicate" namePattern="${bo.superType}" />
			</checkPredicate>
		</rule>

		<!-- BusinessObject implementation typing -->
		<rule name="BO implementation typing"
			message="The BO implementation '${type.name}' must implement a valid BO contract"
			priority="3">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="BO implementation attempt" />
			<checkPredicate xsi:type="jqa:TypingPredicate">
				<predicate xsi:type="jqa:ContextProvidedPredicate" predicateName="BO contract attempt" />
			</checkPredicate>
		</rule>

		<!-- DataAccess contract typing -->
		<rule name="DAO contract typing"
			message="The DAO contract '${type.name}' must extend to '${dao.superType}'"
			priority="3">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="DAO contract attempt" />
			<checkPredicate xsi:type="jqa:TypingPredicate">
				<predicate xsi:type="jqa:NamingPredicate" namePattern="${dao.superType}" />
			</checkPredicate>
		</rule>

		<!-- DataAccess implementation typing -->
		<rule name="DAO implementation typing"
			message="The DAO implementation '${type.name}' must implement a valid DAO contract"
			priority="3">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate" predicateName="DAO implementation attempt" />
			<checkPredicate xsi:type="jqa:TypingPredicate">
				<predicate xsi:type="jqa:ContextProvidedPredicate" predicateName="DAO contract attempt" />
			</checkPredicate>
		</rule>

	</ruleSet>
</jqa_ctx:RulesContext>