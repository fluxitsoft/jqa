<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2011 Juan Ignacio Barisich.
  
  This file is part of JQA (http://github.com/fluxitsoft/jqa).
  
  JQA is free software: you can redistribute it and/or modify it 
  under the terms of the GNU Lesser General Public License as 
  published by the Free Software Foundation, either version 3 of 
  the License, or (at your option) any later version.
  
  JQA is distributed in the hope that it will be useful, but WITHOUT 
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General 
  Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public 
  License along with JQA. If not, see <http://www.gnu.org/licenses/>.
-->
<jqa_ctx:RulesContext name=""
	xmlns:jqa="http://www.fluxit.com.ar/jqa/schema/ruleset" xmlns:jqa_ctx="http://www.fluxit.com.ar/jqa/schema/rulescontext"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.fluxit.com.ar/jqa/schema/rulescontext http://raw.github.com/fluxitsoft/jqa/master/jqa-parent/jqa-ctx-factory-xmlbeans/src/main/resources/schema/rulescontext.xsd http://www.fluxit.com.ar/jqa/schema/ruleset http://raw.github.com/fluxitsoft/jqa/master/jqa-parent/jqa-ctx-factory-xmlbeans/src/main/resources/schema/ruleset.xsd ">

	<rulesContextImport resource="attempts.xml" />

	<!-- RuleSet that checks class allocations -->
	<ruleSet name="Allocation ruleset">

		<!-- Service allocation -->
		<rule name="Service allocation"
			message="The Service '${type.name}' has an invalid allocation. A Service must only allocates a common-type, a Service exception or an Entity"
			priority="2">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate"
				predicateName="Service attempt" />
			<checkPredicate xsi:type="jqa:AllocationPredicate">
				<predicate xsi:type="jqa:OrPredicate">
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Common type" />
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Service exceptions" />
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Entity attempt" />
				</predicate>
			</checkPredicate>
		</rule>

		<!-- BusinessObject allocation -->
		<rule name="BO allocation"
			message="The BO '${type.name}' has an invalid allocation. A BusinessObject must only allocates a common-type, a BO exception or an Entity"
			priority="2">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate"
				predicateName="BO attempt" />
			<checkPredicate xsi:type="jqa:AllocationPredicate">
				<predicate xsi:type="jqa:OrPredicate">
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Common type" />
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="BO exceptions" />
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Entity attempt" />
				</predicate>
			</checkPredicate>
		</rule>

		<!-- DataAccessObject allocation -->
		<rule name="DAO allocation"
			message="The DAO '${type.name}' has an invalid allocation. A DAO must only allocates a common-type, a DAO exception or an Entity"
			priority="2">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate"
				predicateName="DAO attempt" />
			<checkPredicate xsi:type="jqa:AllocationPredicate">
				<predicate xsi:type="jqa:OrPredicate">
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Common type" />
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="DAO exceptions" />
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Entity attempt" />
				</predicate>
			</checkPredicate>
		</rule>

		<!-- View allocation -->
		<rule name="View allocation"
			message="The View '${type.name}' has an invalid allocation. A View must only allocates a common-type, a View exception or an Entity"
			priority="2">
			<filterPredicate xsi:type="jqa:ContextProvidedPredicate"
				predicateName="View attempt" />
			<checkPredicate xsi:type="jqa:AllocationPredicate">
				<predicate xsi:type="jqa:OrPredicate">
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Common type" />
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="View exceptions" />
					<predicate xsi:type="jqa:ContextProvidedPredicate"
						predicateName="Entity attempt" />
				</predicate>
			</checkPredicate>
		</rule>

	</ruleSet>
</jqa_ctx:RulesContext>
